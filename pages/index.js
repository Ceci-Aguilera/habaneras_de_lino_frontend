import Head from 'next/head'
import Image from 'next/image'
import CategoryGrid from '../components/CategoryGrid'
import styles from '../styles/Home.module.css'
import {useEffect, useState} from 'react'
import axios from 'axios'
import { useCart } from '../context/CartContext'
import NextCarousel from '../components/Carousel'
import About from '../components/About'
import CollectionGrid from '../components/CollectionGrid'

const domain = process.env.NEXT_PUBLIC_API_DOMAIN_NAME;

export default function Home() {

  const {cart} = useCart()

  const [categories, setCategories] = useState(null);
  const [collections, setCollections] = useState(null);

    useEffect(async () => {
      await getCategories(setCategories);
       await getCollections(setCollections);
    }, []);
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <NextCarousel />
        <About />
        <CategoryGrid categories={categories} />
        <CollectionGrid collections={collections} />
      </main>

      <footer className={styles.footer}>
        
      </footer>
    </div>
  )
}

const getCategories = (setCategories) => {

  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const categories_url = domain + "store/categories/";
  axios
    .get(categories_url, config)
    .then(async (res) => {
      const result = await res.data;
      setCategories(result);
    })
    .catch((error) => {
      console.log(error);
    });
};


const getCollections = (setCollections) => {

  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const collections_url = domain + "store/collections/";
  axios
    .get(collections_url, config)
    .then(async (res) => {
      const result = await res.data;
      setCollections(result);
    })
    .catch((error) => {
      console.log(error);
    });
};

